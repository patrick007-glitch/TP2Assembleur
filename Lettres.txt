
;***************************************************************


; Programme: lettres.txt


; Version1: Calcul la consonne et la voyelle la plus


; utilisee dans une chaine de caractere saisi par l'utilisateur


; ainsi que son nombre d'occurence.


; Le programme affiche egalement le pourcentage de lettre qui


; sont des voyelle.


; Auteurs: Jean-Michel Landry, Patrick Chalifour


; Codes permanents : LANJ09049206, CHAP03089503


; Courriel: kj191048@ens.uqam.ca, dj991063@ens.uqam.ca


; date: 24 Mars 2020


; cours: INF2171


;*************************************************************


CALL bonjour 


debut: CALL question 


CALL saisi 


CALL compteV 


CALL pourCt

CALL reset 

BR debut



;


; affiche le message de bienvenu et le fonctionnement du programme.


;


bonjour: STRO bienvenu,d 


STRO manuel,d 


RET0 

;
; Reinitialise les valeurs de alphab a 0
;

reset: LDA 0,i 

LDX 0,i

STA compte,d

STA occuVo,d

STA occuTo,d

STA pcVoy,d

STA frVoy,d

retalpha: STA alphab,x

ADDX 2,i

CPX 26,i

BREQ ret

BR retalpha


ret: RET0



;
; affiche la demande de saisie a l'utilisateur.
;



question:STRO demande,d 


RET0 



; Sous programme qui saisi une chaine de caractere


; entrez par l'usager


saisi: LDX 0,i 


LDA 0,i 

boucle: CHARI chaine,x  ; lecture d'un caractère de chaine 

LDBYTEX chaine,x    ; charge le caractère lu

LDA compte,d

ADDA    1,i         ; position suivante

STA   compte,d

CPX     "\n",i      ; dernier caractère ?
 
BREQ    finchain    ; oui, c'est terminé
               

ANDX 0x00DF,i 


CPX 'A',i 


BRLT boucle


CPX 'Z',i 


BRGT boucle


LDA occuTo,d 


ADDA 1,i 


STA occuTo,d 


SUBX 0x0041,i 


LDBYTEA alphab,x 


ADDA 1,i 


STBYTEA alphab,x

BR boucle 


finchain: CPA  1,i  ; est-ce que le caractère ENTREE est le premier caractère lu
         
BREQ    fin        
       
LDA     0,i         ; insérons le délimiteur de fin
   
STBYTEA chaine,x    ; de ligne


retour: RET0 



;

;Sous-Programme comptant le pourcentage de voyelle et l'affiche à l'écran
;

compteV: LDX 0,i 


LDBYTEA alphab,x 


STA occuVo,d 


ADDX 4,i 


LDBYTEA alphab,x 


ADDA occuVo,d 


STA occuVo,d 


ADDX 4,i 


LDBYTEA alphab,x 


ADDA occuVo,d 


STA occuVo,d 


ADDX 6,i 


LDBYTEA alphab,x 


ADDA occuVo,d 


STA occuVo,d 


ADDX 6,i 


LDBYTEA alphab,x 


ADDA occuVo,d 


STA occuVo,d 


ADDX 4,i 


LDBYTEA alphab,x 


ADDA occuVo,d 


STA occuVo,d 



CHARO '\n',i 


RET0 




;mult100: multiplie nombre par cent


;IN: A= nombre a multiplier


;


;


;variables locales


mul4: .EQUATE 0 


mul32: .EQUATE 2 


;


mult100: SUBSP 4,i ;WARNING: Number of bytes allocated (4) not equal to number of bytes listed in trace tag (0).


ASLA ;*2


ASLA ;*4


STA mul4,s 


ASLA ; *8


ASLA ; *16


ASLA ; *32


STA mul32,s 


ASLA ;*64


ADDA mul4,s ; *68


ADDA mul32,s ; * 100


ADDSP 4,i ;WARNING: Number of bytes deallocated (4) not equal to number of bytes listed in trace tag (0).


RET0 


;


;


;divise: divise nombre donner en argument A par X


;In A = dividende


; X = diviseur


;OUT A = reste


; X = quotient


;Variables locales


diviser: .EQUATE 0 


divise: SUBSP 2,i ;allouer espace variables locales ;WARNING: Number of bytes allocated (2) not equal to number of bytes listed in trace tag (0).


STX diviser,s 


LDX 0,i 


soustr: ADDX 1,i 


SUBA diviser,s 


BRGE soustr 


SUBX 1,i 


ADDA diviser,s 


ADDSP 2,i ;WARNING: Number of bytes deallocated (2) not equal to number of bytes listed in trace tag (0).


RET0 


;POURCENTAGE*******************


;Sousprogramme d'affichage du pourcentage


;de voyelle


pourCt: LDA occuVo,d 


CALL mult100 


LDX occuTo,d 


CALL divise 


STX pcVoy,d


CPA 0,i


BREQ pasFrac 


CALL mult100 


LDX occuTo,d 


CALL divise 


STX frVoy,d 


STRO pct1,d 


DECO pcVoy,d 


CHARO ',',i 


DECO frVoy,d 


STRO pct2,d


BR finPc 


pasFrac: STRO pct1,d 


DECO pcVoy,d


STRO pct2,d


finPc: CHARO '\n',i 


RET0 






;Sous-Proramme d'affichage de fin
;affiche le message de fin et termine le programme



fin: STRO final,d 


STOP 











resultat:STRO message1,d 


bienvenu:.ASCII "Bienvenue a ce programme de compte de lettres.\x00"


manuel: .ASCII "\n\nCe programme compte le nombre de voyelles"


.ASCII "\net de consonne dans une chaine de characteres."


.ASCII "\nIl indique quelles lettres apparaissent le plus"


.ASCII "\nsouvent et combien de fois elles sont employer.Il"


.ASCII "\nindique aussi le pourcentage des lettres qui sont"


.ASCII "\ndes voyelles."


.ASCII "\nPour quitter appuyer uniquement sur entree lors de la saisie.\x00"


demande: .ASCII "\n\nEntrez une chaine de characteres (entree pour terminer):\x00"


message1:.ASCII "Avec\x00" 


final: .ASCII "\n\nFin normal du programme\x00"


pct1: .ASCII "Les voyelles représentent \x00"


pct2: .ASCII " % des lettres entrées.\x00"


;Nombre total de voyelle et pourcentages


occuVo: .BLOCK 2 ;#2d de voyelles


occuTo: .BLOCK 2 ;#2d total de lettre


pcVoy: .BLOCK 2 ;#2d pourcentage voyelle


frVoy: .BLOCK 2 ;#2d fraction de pourcentage


;Occurences de chacunes des lettres


compte: .BLOCK 2 ;#2d 


alphab: .BLOCK 26 ;#26d 

chaine: .BLOCK 10 ;#1h10a

.BLOCK 0 ; le reste de la chaine 

.END 